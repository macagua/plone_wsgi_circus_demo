# This buildout.cfg should work to run Zope as a WSGI process
[buildout]
extends = https://dist.plone.org/release/6.0-latest/versions.cfg
extensions = mr.developer

partsdir = ${buildout:directory}/parts
vardir = ${buildout:directory}/var
logdir = ${buildout:vardir}/log
backupdir = ${buildout:vardir}/backup
login = admin
password = admin
languages = en,es
prod-environment =
    PTS_LANGUAGES ${buildout:languages}
    zope_i18n_allowed_languages ${buildout:languages}
    zope_i18n_compile_mo_files true

eggs =
    Plone
    Pillow
    ploneconf.site

zcml =

parts =
    zeoserver
    zeoclient1
    zeoclient2
    zeoclient-debug
    circus-config
    circus

auto-checkout =
    ploneconf.site

[ports]
base            = 80
instance        = ${:base}80
zeoserver       = ${:base}90
zeoclient1      = ${:base}82
zeoclient2      = ${:base}83
zeoclient-debug = ${:base}84

[bindips]
instance        = 0.0.0.0
zeoserver       = 127.0.0.1
zeoclient1      = 127.0.0.1
zeoclient2      = 127.0.0.1
zeoclient-debug = 127.0.0.1

[sources]
ploneconf.site = git https://github.com/collective/ploneconf.site.git

[zeoserver]
recipe = plone.recipe.zeoserver
eggs = ${buildout:eggs}
zeo-address = ${bindips:zeoserver}:${ports:zeoserver}
socket-name = ${buildout:vardir}/zeo.zdsock
file-storage = ${buildout:vardir}/filestorage/Data.fs
blob-storage = ${buildout:vardir}/blobstorage
zeo-log = ${buildout:logdir}/zeoserver.log
pid-file = ${buildout:vardir}/zeoserver.pid
pack-days = 7
pack-keep-old = false

[zeoclient-base]
recipe = plone.recipe.zope2instance
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
user = ${buildout:login}:${buildout:password}
zeo-client = True
zeo-address = ${zeoserver:zeo-address}
blob-storage = ${zeoserver:blob-storage}
var = ${buildout:vardir}
shared-blob = on
http-fast-listen = on
access-log = disable
event-log = disable
environment-vars = ${buildout:prod-environment}
zodb-temporary-storage = off

[zeoclient1]
recipe = plone.recipe.zope2instance
http-address = ${ports:zeoclient1}
ip-address = ${bindips:zeoclient1}
user = ${zeoclient-base:user}
zeo-client = ${zeoclient-base:zeo-client}
zeo-address = ${zeoclient-base:zeo-address}
blob-storage = ${zeoclient-base:blob-storage}
var = ${zeoclient-base:var}
shared-blob = ${zeoclient-base:shared-blob}
http-fast-listen = ${zeoclient-base:http-fast-listen}
access-log = ${zeoclient-base:access-log}
event-log = ${zeoclient-base:event-log}
eggs = ${zeoclient-base:eggs}
zcml = ${zeoclient-base:zcml}
environment-vars = ${zeoclient-base:environment-vars}
zodb-temporary-storage = ${zeoclient-base:zodb-temporary-storage}
zope-conf-additional =
#   <dos_protection>
#     form-memory-limit 16MB
#   </dos_protection>

# Add additional clients here and add them to buildout:zeoclients.
[zeoclient2]
<=zeoclient1
http-address = ${ports:zeoclient2}
ip-address = ${bindips:zeoclient2}

[zeoclient-debug]
<=zeoclient-base
http-address = ${ports:zeoclient-debug}
ip-address = ${bindips:zeoclient-debug}
verbose-security = on

[circus-config]
recipe = collective.recipe.template
input = inline:
    [circus]
    warmup_delay = 7
    statsd = True

    [env:*]
    PATH = $PATH

    ## a zeo in order start this service first!
    # [watcher:zeo]
    # cmd = bin/zeoserver start
    # stop_signal = SIGINT
    # priority  = 100
    # shell = True

    [watcher:zeoclient1]
    cmd = bin/zeoclient1
    args = console
    numprocesses = 1

    [watcher:zeoclient2]
    cmd = bin/zeoclient2
    args = console
    numprocesses = 1

    [watcher:zeoclient-debug]
    cmd = bin/zeoclient-debug
    args = console
    numprocesses = 1
output = ${buildout:directory}/zeo-deploy.ini

[circus]
recipe = zc.recipe.egg:script
eggs =
    circus
    ${buildout:eggs}
